/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A list defining object implementations stored as an array
 *
 * @minItems 2
 */
export type ArrayDefinition = [TypeDefinition, ...ObjectDefinition[]];

/**
 * A schema to map out the structure of the API
 */
export interface APISchema {
  $schema: string;
  /**
   * A list of endpoints used by the API
   *
   * @minItems 1
   */
  endpoints: [Endpoint, ...Endpoint[]];
}
/**
 * An endpoint definition
 */
export interface Endpoint {
  /**
   * The HTTP method of the endpoint
   */
  method: "ALL" | "GET" | "POST" | "PUT" | "DELETE" | "PATCH" | "OPTIONS" | "HEAD";
  /**
   * The URL path of the endpoint using the express.js variable syntax
   */
  path: string;
  /**
   * A brief description about the endpoint
   */
  description: string;
  /**
   * The API version of this endpoint
   */
  version?: number;
  /**
   * A list of the headers required for the request
   */
  headers?: {
    /**
     * A brief description about the usage of the header
     *
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z][\w-]+[a-zA-Z0-9]$".
     */
    [k: string]: string;
  };
  /**
   * A list of the parameters used in the URL
   */
  url_params?: {
    /**
     * A brief description about the usage of the parameter
     *
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^.+$".
     */
    [k: string]: string;
  };
  /**
   * A list of the parameters used in the URL query
   */
  query_params?: {
    /**
     * A brief description about the usage of the parameter
     *
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^.+$".
     */
    [k: string]: string;
  };
  /**
   * The structure of the body sent back by the endpoint
   */
  return_body?: ArrayDefinition | TypeDefinition1 | ObjectDefinition1;
  /**
   * The structure of the body sent in the POST request
   */
  post_body?: ArrayDefinition | TypeDefinition1 | ObjectDefinition1;
  /**
   * A list of additional definitions used by the body structures
   *
   * @minItems 1
   */
  definitions?: [ObjectDefinition1, ...ObjectDefinition1[]];
}
/**
 * Declaring the type and info about the array definition
 */
export interface TypeDefinition {
  /**
   * The type being implemented
   *
   * @minItems 1
   */
  type: string | [string, ...string[]];
  /**
   * A brief description about the type implementation
   */
  description: string;
  /**
   * This type can be undefined
   */
  optional?: boolean;
  /**
   * If the type is a partial type where every field is considered optional
   */
  partial?: boolean;
  /**
   * An object defining an enumeration implementation
   */
  enum?: {
    [k: string]: EnumField;
  };
}
/**
 * A field giving information about a field in an enumeration
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[A-Z][A-Z0-9_]+$".
 */
export interface EnumField {
  /**
   * The value assigned to the enum field
   */
  value: string | number;
  /**
   * A brief description about the usage of the field
   */
  description: string;
}
/**
 * The structure of the objects stored in the array
 */
export interface ObjectDefinition {
  /**
   * All info about the object
   */
  $info: {
    /**
     * The type being implemented
     */
    type: string;
    /**
     * A brief description about the type implementation
     */
    description: string;
    /**
     * If the type is a partial type where every field is considered optional
     */
    partial?: boolean;
  };
  /**
   * The definition of the property
   *
   * This interface was referenced by `ObjectDefinition`'s JSON-Schema definition
   * via the `patternProperty` "^(?::)?[a-zA-Z_][a-zA-Z0-9_]+$".
   */
  [k: string]: ArrayDefinition | TypeDefinition1 | ObjectDefinition1;
}
/**
 * An object defining a type implementation
 */
export interface TypeDefinition1 {
  /**
   * The type being implemented
   *
   * @minItems 1
   */
  type: string | [string, ...string[]];
  /**
   * A brief description about the type implementation
   */
  description: string;
  /**
   * This type can be undefined
   */
  optional?: boolean;
  /**
   * If the type is a partial type where every field is considered optional
   */
  partial?: boolean;
  /**
   * An object defining an enumeration implementation
   */
  enum?: {
    [k: string]: EnumField;
  };
}
/**
 * An object defining an object implementation
 */
export interface ObjectDefinition1 {
  /**
   * All info about the object
   */
  $info: {
    /**
     * The type being implemented
     */
    type: string;
    /**
     * A brief description about the type implementation
     */
    description: string;
    /**
     * If the type is a partial type where every field is considered optional
     */
    partial?: boolean;
  };
  /**
   * The definition of the property
   *
   * This interface was referenced by `ObjectDefinition`'s JSON-Schema definition
   * via the `patternProperty` "^(?::)?[a-zA-Z_][a-zA-Z0-9_]+$".
   */
  [k: string]: ArrayDefinition | TypeDefinition1 | ObjectDefinition1;
}
